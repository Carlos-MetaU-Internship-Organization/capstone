// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//TODO: incorporate indexing

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  name                 String
  username             String     @unique
  phoneNumber          String
  zip                  String
  email                String     @unique
  password             String
  ownedListings        Listing[]  @relation("owner")
  favoritedListings    Listing[]  @relation("favoriter")
  listingVisits        ListingVisit[]
}

model Make {
  id                   Int        @id @default(autoincrement())
  name                 String     @unique
  models               Model[]
}
        
model Model {
  id                   Int        @id @default(autoincrement())
  name                 String
  make                 Make       @relation(fields: [makeName], references: [name])
  makeName             String
}

model Listing {
  id                   Int         @id @default(autoincrement())
  vin                  String      @unique
  condition            String
  make                 String
  model                String
  year                 String
  color                String
  mileage              String
  description          String
  images               String[]
  price                String
  zip                  String
  latitude             Float
  longitude            Float
  city                 String
  state                String
  owner_name           String
  owner_number         String
  sold                 Boolean     @default(false)
  createdAt            DateTime    @default(now())
  owner                User?       @relation("owner", fields: [ownerId], references: [id])
  ownerId              Int?
  views                Int         @default(0)
  favorites            Int         @default(0)
  favoriters           User[]      @relation("favoriter")
  visits               ListingVisit[]
}

model ListingVisit {
  id                   Int         @id @default(autoincrement())
  user                 User        @relation(fields: [userId], references: [id])
  userId               Int
  listing              Listing     @relation(fields: [listingId], references: [id])
  listingId            Int
  visitedAt            DateTime    @default(now())
  dwellTime            Int         @default(0)

  @@unique([userId, listingId])
  @@index([userId, visitedAt])
}